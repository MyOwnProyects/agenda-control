<?php 
use App\Library\FuncionesGlobales;
?>
<style>
    .div_header_filters .navigation {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin: 20px;
    }
    .div_header_filters .navigation .left-section {
        display: flex;
        align-items: center;
        gap: 10px; /* Espacio entre los botones */
        width: 400px; /* Ancho fijo para left-section */
    }
    .div_header_filters .navigation .right-section {
        display: flex;
        align-items: center;
        gap: 10px; /* Espacio entre los botones */
    }
    .div_header_filters .navigation button {
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }
    .div_header_filters .filters {
        display: flex;
        gap: 20px; /* Espacio entre los select */
        margin: 20px;
    }
    .div_header_filters .filters select {
        padding: 10px;
        font-size: 16px;
        border: 1px solid #ddd;
        border-radius: 5px;
    }
    /*  ESTILO PARA DIV DE SEMANAS  */
    .div_header_week_container .week-container {
        display: grid;
        grid-template-columns: repeat(8, 120px);
        grid-auto-rows: 70px;
        gap: 1px;
        background-color: #f0f0f0;
        padding: 1px;
        position: relative;
        width: fit-content; /* Ajusta el ancho al contenido */
        margin: 0 auto; /* Centra el contenedor */
    }

    .div_header_week_container .grid-item {
        background-color: white;
        border: 1px solid #ddd;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 5px;
        box-sizing: border-box;
    }
    .div_header_week_container .grid-item.header {
        background-color: #f8f9fa;
        font-weight: bold;
    }
    .div_header_week_container .grid-item.hour {
        background-color: #f8f9fa;
        font-weight: bold;
    }
    .div_header_week_container .floating-box {
        position: absolute;
        background-color: rgba(0, 123, 255, 0.3);
        border: 2px solid #007bff;
        box-sizing: border-box;
        pointer-events: auto;
        cursor: pointer;
    }

    /* Clase para bg-danger */
    .div_header_week_container .floating-box.bg-danger {
        background-color: rgba(220, 53, 69, 0.3); /* Color peligro (semi-transparente) */
        border-color: #dc3545; /* Color danger para el borde */
    }

    /* Clase para bg-success */
    .div_header_week_container .floating-box.bg-success {
        background-color: rgba(40, 167, 69, 0.3); /* Color éxito (semi-transparente) */
        border-color: #28a745; /* Color success para el borde */
    }

    /* Clase para bg-info */
    .div_header_week_container .floating-box.bg-info {
        background-color: rgba(23, 162, 184, 0.3); /* Color informativo (semi-transparente) */
        border-color: #17a2b8; /* Color info para el borde */
    }

    /* Clase para bg-secondary */
    .div_header_week_container .floating-box.bg-secondary {
        background-color: rgba(108, 117, 125, 0.3); /* Color gris (semi-transparente) */
        border-color: #6c757d; /* Color secondary para el borde */
    }

    /* Clase para bg-dark */
    .div_header_week_container .floating-box.bg-dark {
        background-color: rgba(52, 58, 64, 0.3); /* Color gris oscuro (semi-transparente) */
        border-color: #343a40; /* Color dark para el borde */
    }

    .div_header_week_container .grid-hours:hover {
        border: 1px solid #007bff; /* Borde azul de Bootstrap al hacer hover */
    }

    .hide {
        display:none;
    }

    .div_header_citas {
        min-height: 50px;
        overflow: scroll;
        max-height: 150px;
    }

    .div_header_week_container .floating-box span {
        display: block; /* Forzar a los spans a ocupar líneas independientes */
        width: 100%; /* Ajustar al ancho del contenedor */
        color: #fff; /* Texto en blanco */
        text-align: center; /* Centrar el texto */
        font-size: 14px; /* Tamaño inicial del texto */
        line-height: 1.2; /* Espaciado entre líneas */
        white-space: nowrap; /* Impedir que el texto se divida en varias líneas */
        overflow: hidden; /* Ocultar texto que exceda el contenedor */
        text-overflow: ellipsis; /* Mostrar "..." si el texto excede */
    }

    /* Reducción dinámica del tamaño del texto si es necesario */
    .div_header_week_container .floating-box span {
        font-size: clamp(10px, 2vw, 14px); /* Adaptar el tamaño del texto dinámicamente */
    }

    .info-box {
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: rgba(255, 255, 255, 1);
      color: #000;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
      z-index: 1000;
      display: none;
      max-width: 500px;
      width: 90%;
      text-align: center;
    }

    #infoBox {
      font-family: Arial, sans-serif;
    }

    #infoBox .event-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
    }

    #infoBox .event-title {
      font-size: 1.1rem;
      font-weight: 600;
    }

    #infoBox .icon-button {
      background: none;
      border: none;
      font-size: 1rem;
      color: #6c757d;
      cursor: pointer;
    }

    #infoBox .event-detail {
      font-size: 0.95rem;
      color: #555;
    }

    #infoBox .event-icon {
      margin-right: 8px;
    }

    #infoBox .dot {
      height: 12px;
      width: 12px;
      background-color: #2196f3;
      border-radius: 50%;
      display: inline-block;
      margin-right: 8px;
    }

</style>
<div class="container div_header_filters col-12">
    <h1 class="text-center my-4"><?php echo $translations['html_appointment_scheduling']; ?></h1>
</div>

<div class="container col-12">
    <button id="btn_create" type="button" class="btn btn-outline-dark"><?php echo $translations['html_add_appoitments']; ?></button>
    <button id="btn_agenda_opening" type="button" class="btn btn-outline-dark"><?php echo $translations['html_generate_dates']; ?></button>
</div>

<div id="div_header_week_container" class="container mt-4 d-flex flex-column align-items-center div_header_week_container hide_container container-calendar col-12">
    <div class="week-container div_principal">
        <div class="grid-item header"></div>
        <div class="grid-item header">Lunes</div>
        <div class="grid-item header">Martes</div>
        <div class="grid-item header">Miércoles</div>
        <div class="grid-item header">Jueves</div>
        <div class="grid-item header">Viernes</div>
        <div class="grid-item header">Sábado</div>
        <div class="grid-item header">Domingo</div>
    </div>
</div>

<div class="modal fade modal-xl" id="modal_save_class" tabindex="-1" aria-labelledby="label_modal_agenda_opening" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="label_modal_agenda_opening"><?php echo FuncionesGlobales::UpperString($translations['html_add_appoitments']); ?></h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body col-md-12">
        <form id="form_modal_create" class="needs-validation" novalidate>
            <div class="row mb-3">
                <!-- Campo Clave -->
                <div class="col-md-4">
                    <label for="select_locaciones_modal" class="col-form-label"><?php echo $translations['html_location']; ?></label>
                    <select id="select_locaciones_modal" class="select_locaciones_modal" <?php echo count($arr_locaciones) == 1 ? 'disabled' : ''; ?> required>
                        <option value=""></option>
                        <?php foreach($arr_locaciones as $locacion): ?>
                            <option value="<?php echo $locacion['id']; ?>" <?php echo count($arr_locaciones) == 1 ? 'selected' : ''; ?>><?php echo $locacion['nombre']; ?></option>
                        <?php endforeach; ?>
                    </select>
                    <div class="invalid-feedback"><?php echo $translations['html_error_selected_location']; ?></div>
                </div>
                <div class="col-md-4">
                    <label for="select_servicios_modal" class="col-form-label"><?php echo $translations['html_services']; ?></label>
                    <select id="select_servicios_modal" class="select_servicios_modal" required disabled>
                        <option value=""></option>
                    </select>
                    <div class="invalid-feedback"><?php echo $translations['html_error_selected_location']; ?></div>
                </div>
                <div class="col-md-4">
                    <label for="select_profesionales_modal" class="col-form-label"><?php echo $translations['html_title_professionals']; ?></label>
                    <select id="select_profesionales_modal" class="select_profesionales_modal" required disabled>
                        <option value=""></option>
                    </select>
                    <div class="invalid-feedback"><?php echo $translations['html_error_selected_location']; ?></div>
                </div>
            </div>
            <div class="div_add_appointment col-md-12 hide text-end">
                <button id="btn_add_appoitment" type="button" class="btn btn-outline-dark"><?php echo $translations['html_add_appoinment']; ?></button>
            </div>
            <div class="row div_header_citas hide">
                
            </div>
            <div class="row col-md-12 hide">
                <div id="div_header_week_container_modal" class="container mt-4 d-flex flex-column align-items-center div_header_week_container hide_container container-calendar col-12">
                    <div class="week-container">
                        <div class="grid-item header"></div>
                        <div class="grid-item header">Lunes</div>
                        <div class="grid-item header">Martes</div>
                        <div class="grid-item header">Miércoles</div>
                        <div class="grid-item header">Jueves</div>
                        <div class="grid-item header">Viernes</div>
                        <div class="grid-item header">Sábado</div>
                        <div class="grid-item header">Domingo</div>
                    </div>
                </div>
            </div>
            <div id="alert_error" class="alert alert-danger align-items-center" role="alert" style="display:none;">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
                </svg>
                <div id="msg_error">
                    
                </div>
            </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal"><?php echo $translations['html_btn_cancel']; ?></button>
        <button type="button" id="btnSave" class="btn btn-primary"><?php echo $translations['html_btn_save']; ?></button>
      </div>
    </div>
  </div>
</div>

<div id="template_cita" class="row header_row hide">
    <div class="col-md-3">
        <label for="select_dias" class="col-form-label"><?php echo $translations['html_day']; ?></label>
        <select class="form-select select_dias" aria-label="Default select example" required>
            <option></option>
            <option value="1"><?php echo $translations['html_monday']; ?></option>
            <option value="2"><?php echo $translations['html_thuesday']; ?></option>
            <option value="3"><?php echo $translations['html_wednesday']; ?></option>
            <option value="4"><?php echo $translations['html_thursday']; ?></option>
            <option value="5"><?php echo $translations['html_friday']; ?></option>
            <option value="6"><?php echo $translations['html_saturday']; ?></option>
        </select>
        <div class="invalid-feedback"><?php echo $translations['html_error_selected_location']; ?></div>
    </div>
    <div class="col-md-2 fix-padding" align="center">
        <label for="span_duracion" class="form-label" style="width:100%" title="<?php echo $translations['html_duration']; ?>"><?php echo $translations['html_ab_duration']; ?></label>
        <span class="span_duracion"></span>
    </div>
    <div class="col-md-2" style="padding-right:5px;">
        <label for="input_hora_inicio" class="col-form-label"><?php echo $translations['html_starting_hour']; ?></label>
        <input type="time" step="60" class="form-control input_hora_inicio" required>
        <div class="invalid-feedback"><?php echo $translations['html_error_starting_hour']; ?></div>
    </div>
    <!-- Campo Nombre -->
    <div class="col-md-2" style="padding-right:5px;">
        <label for="input_hora_termino" class="col-form-label"><?php echo $translations['html_ending_hour']; ?></label>
        <input type="time" step="60" class="form-control input_hora_termino" required disabled>
        <div class="invalid-feedback"><?php echo $translations['html_error_ending_hour']; ?></div>
    </div>
    <div class="col-md-2 d-flex flex-column align-items-center" align="center">
        <label for="input_hora_termino" class="col-form-label"><?php echo $translations['html_options']; ?></label>
        <button type="button" class="btn btn-outline-dark btn_delete_hour"><i class="bi bi-calendar2-x"></i></button>
    </div>
</div>

<div class="modal fade" id="modal_agenda_opening" tabindex="-1" aria-labelledby="label_modal_agenda_opening" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="label_modal_agenda_opening"><?php echo FuncionesGlobales::UpperString($translations['html_generate_dates']); ?></h5>
        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body col-md-12">
        <form id="form_modal_agenda_opening" class="needs-validation" novalidate>
            <div class="row mb-3">
                <!-- Campo Clave -->
                <div class="col-md-6">
                    <label for="input_clave" class="col-form-label"><?php echo $translations['html_location']; ?></label>
                    <?php $count_locaciones = count($arr_locaciones); ?>
                    <select id="select_locaciones_modal" class="select_locaciones_modal" <?php echo $count_locaciones == 1 ? 'disabled' : ''; ?> required>
                        <option value=""></option>
                        <?php foreach($arr_locaciones as $locacion): ?>
                            <option value="<?php echo $locacion['id']; ?>" <?php echo $count_locaciones == 1 ? 'selected' : ''; ?>><?php echo $locacion['nombre']; ?></option>
                        <?php endforeach; ?>
                    </select>
                    <div class="invalid-feedback"><?php echo $translations['html_error_selected_location']; ?></div>
                </div>
                <!-- Campo Nombre -->
                <div class="col-md-6">
                    <label for="input_fecha_inicio" class="col-form-label"><?php echo $translations['html_starting_date']; ?></label>
                    <input type="date" class="form-control" id="input_fecha_inicio" disabled required>
                    <div class="invalid-feedback"><?php echo $translations['html_error_starting_date']; ?></div>
                </div>
                <div class="col-md-6">
                    <label for="input_fecha_termino" class="col-form-label"><?php echo $translations['html_limit_date']; ?></label>
                    <input type="date" class="form-control" id="input_fecha_termino" disabled required>
                    <div class="invalid-feedback"><?php echo $translations['html_error_starting_date']; ?></div>
                </div>
            </div>
            <div id="alert_error" class="alert alert-danger align-items-center" role="alert" style="display:none;">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-exclamation-triangle-fill flex-shrink-0 me-2" viewBox="0 0 16 16" role="img" aria-label="Warning:">
                    <path d="M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z"/>
                </svg>
                <div id="msg_error">
                    
                </div>
            </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-outline-dark" data-bs-dismiss="modal"><?php echo $translations['html_btn_cancel']; ?></button>
        <button type="button" id="btnSave" class="btn btn-primary"><?php echo $translations['html_btn_save']; ?></button>
      </div>
    </div>
  </div>
</div>

<!-- Caja emergente -->
<div id="infoBox" class="info-box">
    <div class="event-header mb-2">
        <div class="d-flex align-items-center">
        <span class="dot"></span>
        <span id="servicio" class="event-title"></span>
        </div>
        <div>
        <button class="icon-button btn_edit" title="Editar"><i class="bi bi-pencil-fill"></i></button>
        <button class="icon-button btn_delete" title="Eliminar"><i class="bi bi-trash3-fill"></i></button>
        <button id="closeModal" type="button" class="btn-close " ></button>
        </div>
    </div>

    <div class="event-detail mb-2">
      <span id="dia"></span> • <span id="horario"></span>
    </div>

    <div class="event-detail mb-1 d-flex align-items-center" title="Locaci&oacute;n">
        <i class="bi bi-building"></i>&nbsp<span id="nombre_locacion"></span>
    </div>

    <div class="event-detail mb-1 d-flex align-items-center" title="Duraci&oacute;n">
        <i class="bi bi-clock"></i>&nbsp<span id="duracion"></span>
    </div>

    <div class="event-detail d-flex align-items-center" title="Profesional">
        <i class="bi bi-person-fill"></i>&nbsp<span id="profesional"></span>
    </div>
</div>
<!-- Caja emergente -->
<!-- <div id="" class="" style="display:none;">
    <div class="event-header mb-2">
      <div class="d-flex align-items-center">
        <span class="dot"></span>
        <span class="event-title">Prueba</span>
      </div>
      <div>
        <button class="icon-button" title="Editar">✏️</button>
        <button class="icon-button" title="Eliminar">🗑️</button>
        <button class="icon-button" title="Correo">✉️</button>
        <button class="icon-button" title="Más">⋮</button>
        <button class="icon-button" title="Cerrar">❌</button>
      </div>
    </div>

    <div class="event-detail mb-2">
      <span id="dia"></span> • <span id="horario"></span>
    </div>

    <div class="event-detail mb-1 d-flex align-items-center">
      <span class="event-icon">🔔</span><span id="duracion"></span> minutos
    </div>

    <div class="event-detail d-flex align-items-center">
      <span class="event-icon">📅</span><span id="profesional"></span>
    </div>
  </div> -->

<script>
let module_schedule_appointments    = (function(){
    //  INFO PACIENTE
    const id_paciente       = "<?= $id_paciente; ?>";
    const nombre_completo   = "<?= $nombre_completo; ?>";
    //  URL
    const controller                = '/Pacientes';
    const url_scheduleappointments  = controller+"/scheduleappointments";

    const translations  = {
        emptyTable: "<?= $translations['table_no_data'] ?>",
        info: "<?= $translations['showing_info'] ?>",
        infoEmpty: "<?= $translations['no_records'] ?>",
        search: "<?= $translations['search'] ?>",
        paginate: {
            first: "<?= $translations['paginate_first'] ?>",
            last: "<?= $translations['paginate_last'] ?>",
            next: "<?= $translations['paginate_next'] ?>",
            previous: "<?= $translations['paginate_previous'] ?>"
        },
        title_update    : "<?= $translations['html_edit_record'] ?>",
        title_delete    : "<?= $translations['html_delete_record'] ?>",
        title_change    : "<?= $translations['html_active_deactivate'] ?>",
        title_preview   : "<?= $translations['html_preview_record'] ?>",
        confirm_delete  : "<?= $translations['html_confirm_delete']?>",
        opening_hours   : "<?= $translations['html_opening_hours']?>",
    };

    //  CONTADOR DEL TEMPLATE CITAS POR SERVICIO
    let count_id_citas  = 0;

    const diasSemana = ["Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado","Domingo"];
    let min_hora_inicio = "<?php echo $min_hora_inicio; ?>"
    let max_hora_inicio = "<?php echo $max_hora_inicio; ?>"
    let horas = [];

    let eventos         = <?= $rangos_no_incluidos ?>;
    let citas_paciente  = <?= $citas_paciente ?>;

    console.log('citas_paciente');
    console.log(citas_paciente);

    function crearCuadroFlotante(evento,background,$weekContainer,tipo_flot,id_horario_cita = '') {
        console.log('id_horario_cita',id_horario_cita);
        if (id_horario_cita != ''){
            $($weekContainer).find('#'+id_horario_cita).remove();
        }

        let { start, end, day, duracion = null,id_cita_programada_servicio_horario = null,servicio = null,nombre_locacion = null,profesional = null } = evento;
        const dayIndex  = diasSemana.indexOf(day) + 1;
        const duracion_minutos  = duracion == null ? $($weekContainer).closest("#form_modal_create").find('#select_servicios_modal').find('option:selected').data('duracionminutos') : duracion;
        if (id_cita_programada_servicio_horario != null){
            console.log('id_cita_programada_servicio_horario',id_cita_programada_servicio_horario);
        }

        if ( (id_horario_cita != null && id_cita_programada_servicio_horario != null) && id_horario_cita == id_cita_programada_servicio_horario){
            return true;
        }
        
        //  ANTES DE CONTINUAR SE DEBE DE VERIFICAR QUE NO EXISTA
        //  NINGUN TIPO DE EMPALMADO ENTRE NINGUN CUADRO FLOTANTE
        //TODO VERIFICAR QUE LAS HORAS NO SE EXCEDAN DEL HORARIO DE ATENCION DEL LOCAL
        let span_info   = '';
        if (tipo_flot == 'flot_cita'){
            if ($($weekContainer).hasClass('div_principal')){
                span_info   = '<span>'+servicio+'</span><span>'+start + '-' + end+'</span>'
            }
            let existe_horario_disponinle  = false;
            $($weekContainer).find('.dia_'+dayIndex).each(function(){
                let flag_empalmados     = verificarEmpalmado($weekContainer,dayIndex,start,end);
                if (flag_empalmados['flag_empalmados']){
                    start   = flag_empalmados['hora_termino_empalmado'];
                    const [horas, minutos] = start.split(':').map(Number);
                    // Crear un objeto Date con la fecha actual y la hora extraída
                    const fecha = new Date();
                    fecha.setHours(horas);
                    fecha.setMinutes(minutos);
                    fecha.setMinutes(fecha.getMinutes() + duracion_minutos);

                    // Obtener la nueva hora en formato "HH:MM"
                    end = `${fecha.getHours().toString().padStart(2, '0')}:${fecha.getMinutes().toString().padStart(2, '0')}`;
                } else {
                    existe_horario_disponinle   = true;
                    return false;
                }
            });
            
            if (!existe_horario_disponinle){
                console.log('alert stop');
            }

            //  SE VERIFICA QUE LA HORA DE INICIO Y TERMINO NO ESTEN FUERA
            //  DEL RANGO DEL HORARIO DE ATENCION
            //  SE VERIFICA QUE NO EXISTA EMPALADO DE LA HORA INICIAL

            let hora_inicio         = '';
            let hora_termino        = '';

            let tmp_first_row   = true;
            $($weekContainer).find('.hour').each(function(){
                if (tmp_first_row){
                    hora_inicio     = $(this).text();
                    tmp_first_row   = false;
                }

                hora_termino    = $(this).text();
            })

            let hora_inicio_header  = convertirHoraATiempo(start);
            let hora_termino_header = convertirHoraATiempo(end);
            hora_inicio             = convertirHoraATiempo(hora_inicio);
            hora_termino            = convertirHoraATiempo(hora_termino);
            
            let flag_fuera_rango    = false;
            if (hora_inicio_header >= hora_termino || hora_inicio_header < hora_inicio){
                flag_fuera_rango    = true;
            }

            if (hora_termino_header < hora_inicio || hora_termino_header > hora_termino){
                flag_fuera_rango    = true;
            }

            //  SI EXISTE FUERA DE RANGO, SE ELIMINA EL FLOTANTE Y EL CONTENEDOR
            //  DE LA CITA
            if (flag_fuera_rango){
                showAlert('danger','Fechas fuera de rango del horario de atenci&oacute;n');
                $($weekContainer).closest('#form_modal_create').find(".header_row#"+id_horario_cita).remove();
                $($weekContainer).closest('#form_modal_create').find(".floating-box#"+id_horario_cita).remove();
                $($weekContainer).closest('#form_modal_create').find('#btn_add_appoitment').trigger('click');
                return false;
            }
            
            if (id_horario_cita != ''){
                $($weekContainer).closest('#form_modal_create').find(".header_row#"+id_horario_cita).find('.input_hora_inicio').val(start);
                $($weekContainer).closest('#form_modal_create').find(".header_row#"+id_horario_cita).find('.input_hora_termino').val(end);
            }
        }

        if (tipo_flot == 'flot_locacion'){
            span_info   = '<span>Horario no disponible</span>';
        }

        if (tipo_flot == 'flot_profesional'){
            if (background == 'bg-secondary'){
                span_info   = '<span>Profesional no disponible</span>';
            }

            if (background == 'bg-success'){
                span_info   = '<span>Ocupado</span>';
            }
        }
        

        const startHourIndex = horas.findIndex(hora => hora.startsWith(start.split(":")[0]));
        const endHourIndex = horas.findIndex(hora => hora.startsWith(end.split(":")[0]));

        const startOffset = parseFloat(start.split(":")[1]) / 60;
        const endOffset = parseFloat(end.split(":")[1]) / 60;

        const cellHeight = 70;
        const cellWidth = 120;
        const borderSize = 1;

        const top = ((startHourIndex + startOffset) * (cellHeight + borderSize)) + 72;
        const height = (((endHourIndex - startHourIndex) + (endOffset - startOffset)) * cellHeight + ((endHourIndex - startHourIndex) * borderSize));

        const left = ((dayIndex) * (cellWidth + borderSize)) + 2;
        const width = cellWidth;
        let id_floating = id_cita_programada_servicio_horario == null ? 'id_horario_cita_'+(count_id_citas) : 'id_horario_cita_'+id_cita_programada_servicio_horario;

        if (tipo_flot == 'flot_locacion' || tipo_flot == 'flot_profesional'){
            id_floating = '';
        }

        const $floatingBox = $('<div id="'+id_floating+'" class="floating-box '+background+' '+tipo_flot+' dia_'+dayIndex+'" data-dia="'+dayIndex+'" data-dialabel="'+day+'" data-duracion="'+duracion_minutos+'" data-horainicio="'+start+'" data-horatermino="'+end+'" data-servicio="'+servicio+'" data-profesional="'+profesional+'" data-nombrelocacion="'+nombre_locacion+'" data-idcitaprogramadaserviciohorario="'+id_cita_programada_servicio_horario+'">'+span_info+'</span></div>').css({
            top: `${top}px`,
            left: `${left}px`,
            width: `${width - borderSize}px`,
            height: `${height - borderSize}px`,
        });

        $weekContainer.append($floatingBox);
    }

    function verificarEmpalmado($weekContainer,dayIndex,start,end){
        let hora_inicio_header  = convertirHoraATiempo(start);
        let hora_termino_header = convertirHoraATiempo(end);
        let flag_empalmados         = false;
        let hora_termino_empalmado  = '';
        $($weekContainer).find('.dia_'+dayIndex).each(function(){
            console.log('-----------    dentro del foreach  ---------------');
            let hora_inicio     = convertirHoraATiempo($(this).data('horainicio'));
            let hora_termino    = convertirHoraATiempo($(this).data('horatermino'));
            

            //  SE VERIFICA QUE NO EXISTA EMPALADO DE LA HORA INICIAL
            if (hora_inicio_header >= hora_inicio && hora_inicio_header < hora_termino){
                console.log('empalmado hora_inicio_header');
                flag_empalmados         = true;
                hora_termino_empalmado  = $(this).data('horatermino');
                return false;
            }

            //  SE VERIFICA EL EMPALMADO CON LA HORA DE TERMINO
            if (hora_termino_header > hora_inicio && hora_termino_header <= hora_termino){
                console.log('empalmado hora termino');
                flag_empalmados         = true;
                hora_termino_empalmado  = $(this).data('horatermino');
                return false;
            }

            //  EXISTE UN EMPALMADO POR LO CUAL SE DEBE DE RECALCULAR 
            //  LA HORA INICIO Y TERMINO 
             
            if (flag_empalmados){
                return false;
            }
        });

        return {
            flag_empalmados : flag_empalmados,
            hora_termino_empalmado  : hora_termino_empalmado
        };
    }

    

    function show_hours($weekContainer,min_hora_inicio,max_hora_inicio){
        horas   = [];
        for (let i = min_hora_inicio; i <= max_hora_inicio; i++) {
            horas.push(`${i.toString().padStart(2, '0')}:00`);
        }

        //

        horas.forEach(hora => {
            $weekContainer.append(`<div class="grid-item hour">${hora}</div>`);
            for (let i = 0; i < 7; i++) {
                let dia = diasSemana[i];
                $weekContainer.append('<div class="grid-item grid-hours" data-dia="'+dia+'" data-horainicio="'+hora+'"></div>');
            }
        });
    }

    $(document).ready(function(){
        //  CONVERTIR LOS COMBOS EN SELECT2
        selectToSelect2($(".div_header_filters"),"select_locaciones");
        selectToSelect2($(".div_header_filters"),"select_servicios");
        selectToSelect2($(".div_header_filters"),"select_profesionales");

        const $weekContainer = $("#div_header_week_container").find(".week-container");
        show_hours($weekContainer,min_hora_inicio,max_hora_inicio);
        eventos.forEach(evento => crearCuadroFlotante(evento,'bg-secondary',$weekContainer,'flot_locacion'));
        citas_paciente.forEach(evento => crearCuadroFlotante(evento,'bg-success',$weekContainer,'flot_cita'));


        $("#btn_create").on('click',function(){
            show_modal_citas();
        });

        //  EVENTOS PARA APERTURA DE AGENDA
        $("#btn_agenda_opening").on('click',function(){
            let modal_clone = $("#modal_agenda_opening").clone().show();

            // Aplica select2 solo al nuevo select
            $(modal_clone).find('.select_locaciones_modal').select2({
                placeholder : 'Seleccione una opción',
                allowClear  : false,
                dropdownParent: $(modal_clone),
                width: '50px'
            }).on('select2:select',function(){
                const id_locacion   = $(this).val();
                $.ajax({
                    url     : url_scheduleappointments,
                    method  : 'post',
                    data    : {
                        accion      : 'get_date',
                        id_locacion : id_locacion
                    },
                    success     : function(data){
                        console.log('data');
                        console.log(data);

                        $(modal_clone).find('#input_fecha_inicio').prop('disabled',false).attr('min' , data['fecha_actual']).attr('max',data['last_fecha_limite']).val(data['fecha_actual']).trigger('change');
                        $(modal_clone).find('#input_fecha_termino').attr('min' , data['fecha_actual']).data('fecha',data['last_fecha_limite']).val(data['last_fecha_limite']).prop('disabled',true);
                    },
                    error       : function(error){
                        actionJsonError(error,btn);
                    }
                })
            });

            if ($(modal_clone).find('.select_locaciones_modal').val() != null && $(modal_clone).find('.select_locaciones_modal').val() != ''){
                $(modal_clone).find('.select_locaciones_modal').trigger('select2:select');
            }

            $(modal_clone).on('click','#btnSave',function(){
                let btn =  $(this);
                $(btn).prop('disable',true);

                const form = $(modal_clone).find('#form_modal_agenda_opening')[0]; // Obtén el elemento DOM
                let flag_error  = false;
                if (form.checkValidity() === false) {
                    $(form).addClass('was-validated');
                    flag_error  = true;
                } else {
                    $(form).removeClass('was-validated');
                }

                let fecha_inicio    = $(modal_clone).find('#input_fecha_inicio').val();
                let fecha_termino   = $(modal_clone).find('#input_fecha_termino').data('fecha');

                // Convertir las cadenas a objetos Date
                fecha_inicio    = new Date(fecha_inicio);
                fecha_termino   = new Date(fecha_termino);

                //  VALIDAR REGISTROS
                if (fecha_inicio > fecha_termino){
                    $(modal_clone).find('#alert_error').find('#msg_error').html(error_list['error_range_date']);
                    $(modal_clone).find('#alert_error').addClass('d-flex').show();
                    return false;
                }

                if(flag_error){
                    return false;
                }

                let obj_info    = {
                    id_locacion     : $(modal_clone).find('#select_locaciones_modal').val(),
                    nombre_locacion : $(modal_clone).find('#select_locaciones_modal').find('option:selected').text(),
                    fecha_inicio    : $(modal_clone).find('#input_fecha_inicio').val(),
                    fecha_termino   : $(modal_clone).find('#input_fecha_termino').val(),
                    id_paciente     : id_paciente
                };

                console.log('obj_info');
                console.log(obj_info);
                //return false;

                //  AJAX SAVE
                $.ajax({
                    url         : url_scheduleappointments,
                    method      : 'POST',
                    dataType    : 'json',
                    data        : {
                        accion      : 'save_generate_agenda',
                        obj_info    : obj_info
                    },
                    success     : function(data){
                        $(btn).prop('disabled',false);
                        $(modal_clone).modal('hide');
                        showAlert('success',data);
                        
                    },
                    error     : function(error){
                        actionJsonError(error,btn);
                    }
                })
            });

            $(modal_clone).modal('show');
        });

        const $floatingBox = $(".flot_cita");
        const $infoBox = $("#infoBox");
        const $closeModal = $("#closeModal");

        // Mostrar el modal al pasar el mouse sobre el .flot_cita
        $("#div_header_week_container").on("click",'.flot_cita',function () {
            let horario = $(this).data('horainicio')+' Hrs. - '+$(this).data('horatermino')+' Hrs.';
            $infoBox.find("#profesional").text($(this).data('profesional'));
            $infoBox.find("#servicio").text($(this).data('servicio'));
            $infoBox.find("#nombre_locacion").text($(this).data('nombrelocacion'));
            $infoBox.find("#duracion").text($(this).data('duracion')+' Minutos');
            $infoBox.find("#dia").text($(this).data('dialabel'));
            $infoBox.find("#horario").text(horario);
            $infoBox.find(".icon-button")
                .data('idcitaprogramadaserviciohorario',$(this).data('idcitaprogramadaserviciohorario'))
                .data('dia',$(this).data('dialabel'))
                .data('horainicio',$(this).data('horainicio'));
            $infoBox.css("display", "block"); // Mostrar el modal
        });

        // Ocultar el modal al hacer clic en el botón de cerrar
        $closeModal.on("click", function () {
            $infoBox.css("display", "none"); // Ocultar el modal
        });

        $("#infoBox").on('click','.btn_delete',async function(){
            const btn   = $(this);
            const id_cita_programada_servicio_horario   = $(this).data('idcitaprogramadaserviciohorario');
            const respuesta = await window.modalConfirm(translations['confirm_delete']);
            if (respuesta){
                $.ajax({
                    url     : url_scheduleappointments,
                    method  : 'post',
                    data    : {
                        accion : 'delete_program_date',
                        id_cita_programada_servicio_horario : id_cita_programada_servicio_horario,
                        nombre_completo : nombre_completo
                    },
                    success : function(data){
                        console.log('data aqui');
                        console.log(data);
                        $("#div_header_week_container").find(".week-container").find('.flot_cita').each(function(){
                            console.log('if each');
                            console.log($(this).data('idcitaprogramadaserviciohorario') == id_cita_programada_servicio_horario);
                            console.log($(this).data('idcitaprogramadaserviciohorario'));
                            console.log(id_cita_programada_servicio_horario);
                            if ($(this).data('idcitaprogramadaserviciohorario') == id_cita_programada_servicio_horario){
                                $(this).remove();
                                return false;
                            }
                        });
                        showAlert('success','Borrado exitoso!');
                        $("#closeModal").trigger('click');
                    }, 
                    error   : function(error){
                        actionJsonError(error,btn);
                    }
                });
            }
        });

        $("#infoBox").on('click','.btn_edit',function(){
            const dia           = $(this).data('dia');
            const hora_inicio   = $(this).data('horainicio');
            const id_cita_programada_servicio_horario   = $(this).data('idcitaprogramadaserviciohorario');

            show_modal_citas(id_cita_programada_servicio_horario,dia,hora_inicio);
            $("#closeModal").trigger('click');
        });

        $(".div_principal").on('click','.grid-hours',function(){
            const dia           = $(this).data('dia');
            const hora_inicio   = $(this).data('horainicio');

            show_modal_citas(null,dia,hora_inicio);
        });
    });

    function search_info_location_modal(modal_clone,id_locacion){
        $.ajax({
            url     : url_scheduleappointments,
            method  : 'post',
            data    : {
                accion      : 'get_info_locacion',
                id_locacion : id_locacion
            },
            success : function(data){
                console.log('data');
                console.log(data);
                $(modal_clone).find('.floating-box').remove();
                show_calendar(modal_clone,data,id_locacion);
            },
            error   : function(error){
                console.log('error');
                console.log(error);

                $(modal_clone).find('.grid-hours').remove();
                $(modal_clone).find('.hour').remove();
                $(modal_clone).find('.floating-box').remove();

                $(modal_clone).find('#select_servicios_modal').val(null).trigger('change');
                $(modal_clone).find('#select_servicios_modal').prop('disabled',true).find('option').remove();

                $(modal_clone).find('#select_profesionales_modal').val(null).trigger('change');
                $(modal_clone).find('#select_profesionales_modal').prop('disabled',true).find('option').remove();

                $(modal_clone).find('.div_add_appointment').addClass('hide');
                $(modal_clone).find('.header_row').remove();
                $(modal_clone).find('#div_header_week_container_modal').closest('.row').addClass('hide');
            }
        });
    }

    function show_modal_citas(id_cita_programada = null,dia_default = null,hora_default = null){
        let modal_clone = $("#modal_save_class").clone().show();
        let min_hora_inicio_modal   = '';
        let max_hora_inicio_modal   = '';

        if (id_cita_programada == null){
            count_id_citas  ++;

            let row_cita    = $("#template_cita").clone().attr('id','id_horario_cita_'+count_id_citas);
            $(row_cita).find('.select_dias').select2({
                placeholder: 'Seleccione una opción',
                dropdownParent: $(modal_clone),
                width: '50px'
            });
            $(modal_clone).find('.div_header_citas').append(row_cita);
        } else {
            let row_cita    = $("#template_cita").clone().attr('id','id_horario_cita_'+id_cita_programada);
            $(row_cita).find('.select_dias').select2({
                placeholder: 'Seleccione una opción',
                dropdownParent: $(modal_clone),
                width: '50px'
            });
            $(modal_clone).find('.div_header_citas').append(row_cita);
            $(modal_clone).find('.div_add_appointment').hide();
            $(modal_clone).find('.btn_delete_hour').hide();
        }

        $(modal_clone).on('click','#btn_add_appoitment',function(){
            count_id_citas  ++;

            let row_cita    = $("#template_cita").clone().removeClass('hide').attr('id','id_horario_cita_'+count_id_citas);
            $(row_cita).find('.span_duracion').text($(modal_clone).find('#select_servicios_modal').find('option:selected').data('duracionminutos')+' Min.');

            $(row_cita).find('.select_dias').select2({
                placeholder: 'Seleccione una opción',
                dropdownParent: $(modal_clone),
                width: '50px'
            });

            $(modal_clone).find('.div_header_citas').append(row_cita);
        });

        $(modal_clone).find('#select_locaciones_modal').select2({
            placeholder: 'Seleccione una opción',
            dropdownParent: $(modal_clone),
            width: '50px'
        }).on('select2:select',function(){
            if ($(this).val() != null){
                const id_locacion   = $(this).val();
                search_info_location_modal(modal_clone,id_locacion);
            }
        });

        if ($(modal_clone).find('#select_locaciones_modal').val() != null && $(modal_clone).find('#select_locaciones_modal').val() != null != ''){
            search_info_location_modal(modal_clone,$(modal_clone).find('#select_locaciones_modal').val());
        }

        $(modal_clone).find('#select_servicios_modal').select2({
            placeholder: 'Seleccione una opción',
            dropdownParent: $(modal_clone),
            width: '50px'
        }).on('select2:select',function(){
            const id_servicio       = $(this).val();
            const duracion_minutos  = $(modal_clone).find('#select_servicios_modal').find('option:selected').data('duracionminutos');

            $.ajax({
                url     : url_scheduleappointments,
                method  : 'post',
                data    : {
                    accion      : 'get_profesionales',
                    id_locacion : $(modal_clone).find("#select_locaciones_modal").val(),
                    id_servicio : id_servicio
                },
                success : function(data){
                    // console.log('data');
                    // console.log(data);

                    let option  = '<option></option>';
                    for(let i in data){
                        option  += '<option value="'+data[i]['id'] +'">'+data[i]['nombre_completo']+'</option>';
                    }

                    $(modal_clone).find('.span_duracion').text(duracion_minutos+' Min.');
                    $(modal_clone).find('#select_profesionales_modal').find('option').remove();
                    $(modal_clone).find('#select_profesionales_modal').append(option);
                    $(modal_clone).find('#select_profesionales_modal').prop('disabled',false);
                    //$(modal_clone).find('.input_hora_inicio').prop('disabled',false);

                    clear_week_container(modal_clone,false);
                    $(modal_clone).find('.flot_profesional').remove();
                    $(modal_clone).find('.flot_cita').remove();
                },
                error   : function(error){
                    console.log('error');
                    console.log(error);
                }
            });
        });

        $(modal_clone).find('#select_profesionales_modal').select2({
            placeholder: 'Seleccione una opción',
            dropdownParent: $(modal_clone),
            width: '50px'
        }).on('select2:select',function(){
            const id_profesional    = $(this).val();
            const min_hora_inicio   = $(this).data('minhora');
            const max_hora_inicio   = $(this).data('maxhora');
            $.ajax({
                url     : url_scheduleappointments,
                method  : 'post',
                data    : {
                    accion  : 'get_horario_profesional',
                    id_locacion     : $(modal_clone).find("#select_locaciones_modal").val(),
                    id_profesional  : id_profesional,
                    min_hora_inicio : min_hora_inicio,
                    max_hora_inicio : max_hora_inicio
                },
                success : function(eventos){

                    clear_week_container(modal_clone,true);

                    const $weekContainer = $(modal_clone).find("#div_header_week_container_modal").find(".week-container");
                    $(modal_clone).find('.flot_profesional').remove();
                    eventos['rango_no_disponible'].forEach(evento => crearCuadroFlotante(evento,'bg-secondary',$weekContainer,'flot_profesional'));
                    eventos['citas_paciente'].forEach(evento => crearCuadroFlotante(evento,'bg-success',$weekContainer,'flot_profesional',id_cita_programada));

                    $(modal_clone).find('.hide').removeClass('hide');
                    

                    if (dia_default != null && hora_default != null){
                        modal_click_grid_hours(modal_clone,dia_default,hora_default,true);
                    } else {
                        if ($(modal_clone).find('.header_row').length == 0){
                            $(modal_clone).find('#btn_add_appoitment').trigger('click');
                        }
                    }
                },
                error : function(error){
                    console.log('error');
                    console.log(error);
                    $(modal_clone).find('.flot_profesional').remove();
                    $(modal_clone).find('#select_profesionales_modal').val(null).trigger('change');

                    // $(modal_clone).find('.btn_delete_hour').each(function(){
                    //     let id_template_cita    = $(this).closest('.header_row').attr('id');
                    //     if ($(modal_clone).find(".floating-box#"+id_template_cita).length > 0){
                    //         $(modal_clone).find(".floating-box#"+id_template_cita).remove();
                    //         $(this).closest('.header_row').remove();
                    //     }

                    //     if ($(modal_clone).find('.header_row').length == 0){
                    //         $(modal_clone).find('#btn_add_appoitment').trigger('click');
                    //     }
                    // });
                    clear_week_container(modal_clone,false);

                    showAlert('danger','Profesional sin horario de atenci&oacute;n asignado');
                }
            })
        });

        $(modal_clone).on('click','.btn_delete_hour',async function(){

            let id_template_cita    = $(this).closest('.header_row').attr('id');
            if ($(modal_clone).find(".floating-box#"+id_template_cita).length > 0){
                const respuesta = await window.modalConfirm(translations['confirm_delete']);
                if (respuesta){
                    $(modal_clone).find(".floating-box#"+id_template_cita).remove();
                    $(this).closest('.header_row').remove();
                }
            } else {
                $(this).closest('.header_row').remove();
            }

            if ($(modal_clone).find('.header_row').length == 0){
                $(modal_clone).find('#btn_add_appoitment').trigger('click');
            }

        });

        $(modal_clone).on('select2:select','.select_dias',function(){
            //  SE VERIFICA QUE TODO EL ROW TENGA VALOR
            let hora_inicio     = $(this).closest('.header_row').find('.input_hora_inicio').val();
            let hora_termino    = $(this).closest('.header_row').find('.input_hora_termino').val();
            let dia             = $(this).val();

            if (hora_inicio != '' && hora_termino != '' && dia != ''){
                let obj_evento  = {
                    start   : hora_inicio,
                    end     : hora_termino,
                    day     : diasSemana[dia - 1]
                }
                console.log('crear div');
                console.log(obj_evento);
                crearCuadroFlotante(obj_evento,'bg-info',$(modal_clone).find(".week-container"),'flot_cita',$(this).closest('.header_row').attr('id'));
            }
        });

        $(modal_clone).on('blur', '.input_hora_inicio', function() {
            const valor = $(this).val(); // Obtener el valor del input
            const patron = /^([01]\d|2[0-3]):([0-5]\d)$/; // Expresión regular para validar HH:MM

            // Validar el formato de la hora
            if (patron.test(valor) ) {
                // Ejecutar la función solo si el formato es correcto
                change_input_hora_inicio($(this), $(this).closest('.header_row').find('.select_dias').val() != '');
            }
        });

        $(modal_clone).on('click','.floating-box',function(){
            console.log('id cambio',$(this).attr('id'));
        });

        $(modal_clone).on('click','.grid-hours',function(){
            const dia           = $(this).data('dia');
            const hora_inicio   = $(this).data('horainicio');

            if ($(modal_clone).find("#select_profesionales_modal").val() == null || $(modal_clone).find("#select_profesionales_modal").val() == ''){
                return false;
            }

            if (id_cita_programada != null){
                $(modal_clone).find('.flot_cita').remove();
            }

            modal_click_grid_hours(modal_clone,dia,hora_inicio,null,id_cita_programada);
            
        });

        $(modal_clone).on('click','#btnSave',function(){
            let btn = $(this);
            $(btn).prop('disabled',true);
            const form = $(modal_clone).find('#form_modal_create')[0]; // Obtén el elemento DOM
            let flag_error  = false;
            if (form.checkValidity() === false) {
                $(form).addClass('was-validated');
                flag_error  = true;
            } else {
                $(form).removeClass('was-validated');
            }

            if (flag_error){
                $(btn).prop('disabled',false);
                return false;
            }

            //  SE VALIDA QUE NO EXISTAN HORAS EMPALMADAS
            let flag_empalmados = false;
            let dia_empalmado   = '';
            $(modal_clone).find('.header_row').each(function(){
                const id_header         = $(this).attr('id');
                console.log('id_header');
                console.log(id_header);
                const day_header        = $(this).find('.select_dias').val();
                let hora_inicio_header  = convertirHoraATiempo($(this).find('.input_hora_inicio').val());
                let hora_termino_header = convertirHoraATiempo($(this).find('.input_hora_termino').val());
                dia_empalmado           = $(this).find('.select_dias').find('option:selected').text();

                $(modal_clone).find('.header_row').each(function(){
                    //  NO SE VERIFICA EL EMPALMADO SI ES EL MISMO ID O SI ES DIFERENTE DIA
                    console.log('$(this).attr("id")');
                    console.log($(this).attr('id'));
                    if (id_header == $(this).attr('id')){
                        return true;
                    }

                    if (day_header != $(this).find('.select_dias').val()){
                        return true;
                    }

                    let hora_inicio     = convertirHoraATiempo($(this).find('.input_hora_inicio').val());
                    let hora_termino    = convertirHoraATiempo($(this).find('.input_hora_termino').val());

                    //  SE VERIFICA QUE NO EXISTA EMPALADO DE LA HORA INICIAL
                    console.log('hora_inicio_header >= hora_inicio');
                    console.log(hora_inicio_header >= hora_inicio,hora_inicio);
                    if (hora_inicio_header >= hora_inicio && hora_inicio_header < hora_termino){
                        console.log('empalmado hora_inicio_header');
                        flag_empalmados = true;
                        return false;
                    }

                    //  SE VERIFICA EL EMPALMADO CON LA HORA DE TERMINO
                    if (hora_termino_header > hora_inicio && hora_termino_header <= hora_termino){
                        console.log('empalmado hora termino');
                        flag_empalmados = true;
                        return false;
                    }

                    if (flag_empalmados){
                        return false;
                    }
                });
            });

            if (flag_empalmados){
                $(btn).prop('disabled',false);
                $(modal_clone).find('#alert_error').find('#msg_error').html(error_list['error_spliced']+ dia_empalmado);
                $(modal_clone).find('#alert_error').addClass('d-flex').show();
                return false;
            } else {
                $(modal_clone).find('#alert_error').removeClass('d-flex').hide();
            }

            let obj_info        = {};
            let count_services  = 0;
            obj_info[count_services]    = {};
            obj_info[count_services]['id_servicio']         = $(modal_clone).find('.select_servicios_modal').val();
            obj_info[count_services]['label_servicio']      = $(modal_clone).find('.select_servicios_modal').find('option:selected').text();
            obj_info[count_services]['id_profesional']      = $(modal_clone).find('.select_profesionales_modal').val();
            obj_info[count_services]['label_profesional']   = $(modal_clone).find('.select_profesionales_modal').find('option:selected').text();

            let count_horarios  = 0;
            obj_info[count_services]['horarios']    = {};

            $(modal_clone).find('.header_row').each(function(){
                obj_info[count_services]['horarios'][count_horarios]    = {
                    dia             : $(this).find('.select_dias').val(),
                    hora_inicio     : $(this).find('.input_hora_inicio').val(),
                    hora_termino    : $(this).find('.input_hora_termino').val(),
                };

                count_horarios  ++;
            });

            console.log('obj_info');
            console.log(obj_info);
            //return false;

            $.ajax({
                url         : url_scheduleappointments,
                method      : 'post',
                data        : {
                    obj_info    : obj_info,
                    accion      : 'save_program_date',
                    nombre_completo : nombre_completo,
                    id_paciente     : id_paciente,
                    id_locacion     : $(modal_clone).find('.select_locaciones_modal').val(),
                    id_cita_programada_servicio_horario : id_cita_programada  
                },
                success : function(data){
                    console.log('data');
                    console.log(data);
                    showAlert('success','Captura exitosa!');
                    $(modal_clone).modal('hide');
                    const $weekContainer = $("#div_header_week_container").find(".week-container");
                    $($weekContainer).find('.flot_cita').remove();
                    data.forEach(evento => crearCuadroFlotante(evento,'bg-success',$weekContainer,'flot_cita'));
                },
                error : function(error){
                    $(btn).prop('disabled',false);
                    console.log('error');
                    console.log(error);
                    actionJsonError(error,btn);
                }
            });
        });

        $(modal_clone).modal('show');
    }

    function click_grid_hours(div_header,element){

    }

    function modal_click_grid_hours(modal_clone,dia,hora_inicio,carga_default = null,id_cita_programada = null){
        console.log('carga_default',carga_default);
        console.log('id_cita_programada',id_cita_programada);
        //  SE BUSCA QUE LA HORA INICIO + DURACION ENCAJE EN LA HORA DISPONIBLE
        //  DEL DIA SELECCIONADO

        //  SE BUSCA DE CADA REGISTRODE CITA 
        //  SI YA EXISTE UN ELEMENTO FLOTANTE CREADO
        let id_template_cita    = null;
        if (id_cita_programada == null){
            $(modal_clone).find('.header_row').each(function(){
                let id_horario_cita = $(this).attr('id');

                // if ($(modal_clone).find('.week-container').find('#'+id_horario_cita).length == 0){
                //     id_template_cita    = id_horario_cita;
                // }
                if (($(this).find('.select_dias').val() == null || $(this).find('.select_dias').val() == '') || 
                ($(this).find('.input_hora_inicio').val() == null || $(this).find('.input_hora_inicio').val() == '')){
                    id_template_cita    = id_horario_cita;
                }
            });
        } else {
            id_template_cita    = 'id_horario_cita_'+id_cita_programada;
        }

        //  SI ID_TEMPLATE_CITA <> NULL SIGNIFICA QUE HAY UN 
        //  ELEMENTO CITA VACIO Y SE AGREGA EN AUTOMATICO LA INFO
        let template_cita;
        if (id_template_cita != null){
            template_cita   = $(modal_clone).find(".header_row#"+id_template_cita);
            if (carga_default != null){
                $(template_cita).addClass('carga_default');
            }
        } else {
            //  SI ID_TEMPLATE_CITA ES NULL SIGNIFICA QUE
            //  NO HAY UN TEMPLATE DE CITAS DISPONIBLE, POR LO CUAL SE
            //  DEBE DE PREGUNTAR SI SE DESEA AGREGAR UNA NUEVA CITA
            $(modal_clone).find("#btn_add_appoitment").trigger('click');
            id_template_cita    = 'id_horario_cita_'+count_id_citas;
            template_cita       = $(modal_clone).find(".header_row#"+id_template_cita);
        }

        $(template_cita).find('.select_dias').val((diasSemana.indexOf(dia) + 1)).trigger('change');
        $(template_cita).find('.input_hora_inicio').val(hora_inicio);
        change_input_hora_inicio($(template_cita).find('.input_hora_inicio'),false);
        let obj_evento  = {
            start   : $(template_cita).find('.input_hora_inicio').val(),
            end     : $(template_cita).find('.input_hora_termino').val(),
            day     : dia
        }
        crearCuadroFlotante(obj_evento,'bg-info',$(modal_clone).find("#div_header_week_container_modal").find(".week-container"),'flot_cita',id_template_cita);
    }

    function show_calendar(modal_clone,data,id_locacion){
        const $weekContainer = $(modal_clone).find("#div_header_week_container_modal").find(".week-container");
        show_hours($weekContainer,data['min_hora_inicio'],data['max_hora_inicio']);
        eventos.forEach(evento => crearCuadroFlotante(evento,'bg-secondary',$weekContainer,'flot_locacion'));

        $(modal_clone).find('#select_profesionales_modal').data('minhora',data['min_hora_inicio']);
        $(modal_clone).find('#select_profesionales_modal').data('maxhora',data['max_hora_inicio']);

        $(modal_clone).find('#select_profesionales_modal').prop('disabled',true).val(null).trigger('change');
        $(modal_clone).find('#select_profesionales_modal').find('option').remove().append('<option></option>');

        $(modal_clone).find('#select_servicios_modal').find('option').remove();
        $(modal_clone).find('#select_servicios_modal').append('<option></option>');

        for(let i in data['all_services']){
            let service = data['all_services'][i];

            let option  = '<option value="'+service["id"]+'" data-duracionminutos="'+service['duracion_minutos'] +'" data-duracion="'+service['duracion'] +'">'+service["nombre"]+'</option>'
            $(modal_clone).find('#select_servicios_modal').append(option);

        }

        $(modal_clone).find('#select_servicios_modal').prop('disabled',false);
    }

    function change_input_hora_inicio(element,actualizar_div_flotante = false){
        // String de hora
        let horaString  = $(element).val();
        let dia         = $(element).closest('.header_row').find('.select_dias').val();
        const duracion  = $(element).closest('#form_modal_create').find('.select_servicios_modal').find('option:selected').data('duracionminutos');

        // Validar que el string de hora tenga el formato correcto
        if (!/^\d{1,2}:\d{2}$/.test(horaString)) {
            console.error('Formato de hora inválido. Debe ser H:MM o HH:MM');
            return; // Detener la ejecución si el formato no es válido
        }

        // Asegurar que la hora tenga dos dígitos en la parte de las horas (agregar un 0 si es necesario)
        if (horaString.length === 4) { // Si es de la forma "H:MM"
            horaString = '0' + horaString; // Convertir a "HH:MM"
        }

        // Extraer horas y minutos del string
        const [horas, minutos] = horaString.split(':').map(Number);

        // Validar que las horas y minutos sean números válidos
        if (isNaN(horas) || isNaN(minutos) || horas < 0 || horas > 23 || minutos < 0 || minutos > 59) {
            console.error('Hora o minutos inválidos');
            return; // Detener la ejecución si los valores no son válidos
        }

        // Crear un objeto Date con la fecha actual y la hora extraída
        const fecha = new Date();
        fecha.setHours(horas);
        fecha.setMinutes(minutos);

        // Sumar la duración (asegurarse de que duracion sea un número)
        if (isNaN(duracion) || duracion < 0) {
            console.error('Duración inválida');
            return; // Detener la ejecución si la duración no es válida
        }
        fecha.setMinutes(fecha.getMinutes() + duracion);

        // Obtener la nueva hora en formato "HH:MM"
        const nuevaHora = `${fecha.getHours().toString().padStart(2, '0')}:${fecha.getMinutes().toString().padStart(2, '0')}`;
        $(element).closest('.header_row').find('.input_hora_termino').val(nuevaHora);

        if (actualizar_div_flotante){
            let obj_evento  = {
                start   : horaString,
                end     : nuevaHora,
                day     : diasSemana[dia - 1]
            }
            crearCuadroFlotante(obj_evento,'bg-info',$(element).closest("#form_modal_create").find(".week-container"),'flot_cita',$(element).closest('.header_row').attr('id'));
        }
    }

    function clear_week_container(modal_clone,check_carga_default = false){
        $(modal_clone).find('.btn_delete_hour:visible').each(function(){
            if (check_carga_default && $(this).closest('.header_row').hasClass('carga_default')){
                return true;
            }
            let id_template_cita    = $(this).closest('.header_row').attr('id');
            if ($(modal_clone).find(".floating-box#"+id_template_cita).length > 0){
                $(modal_clone).find(".floating-box#"+id_template_cita).remove();
                $(this).closest('.header_row').remove();
            }

            if ($(modal_clone).find('.header_row').length == 0){
                $(modal_clone).find('#btn_add_appoitment').trigger('click');
            }
        });
    }
})();
</script>